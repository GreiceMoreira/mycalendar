function generateCalendar() {

    const monthNames = [
        "January", "February", "March", "April", "May", "June",
        "July", "August", "September", "October", "November", "December"
    ]

    const weekDays = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];

    const today = new Date();
    const monthIndex = today.getMonth();
    let month = monthNames[monthIndex];
    const year = today.getFullYear();

    document.getElementById("monthName").textContent = `${month} ${year}`;

    const lastDay = new Date(year, monthIndex + 1, 0).getDate();

    const daysGrid = document.getElementById("daysGrid");
    daysGrid.innerHTML = "";

    weekDays.forEach(dayName => { 
        const dayHeader = document.createElement("div");
        dayHeader.classList.add("day-name");
        dayHeader.textContent = dayName;
        daysGrid.appendChild(dayHeader);
        
    });

    for (let day = 1; day <= lastDay; day++) {
        const dayElement = document.createElement("div");
        dayElement.classList.add("day");
        dayElement.textContent = day;

        if (day === today.getDate()) {
            dayElement.classList.add("today");
        }

        daysGrid.appendChild(dayElement);
    }

}

async function getData() {
    const url = "http://localhost:8080/events";

    try {
        const response = await fetch(url);
        
        if(!response.ok){
            throw new Error(`Response status: ${response.status}`);
        }

        const result = await response.json();
        console.log(result);
    }catch (error){
        console.error(error.message);
    }
    
}


function getTodayEvents() {

}

getData();

generateCalendar();
fetchTodayEvents();